* The MaW roadmap

This is the roadmap for maw. Feel free to add todo items. We should discuss this
in person.
  
** The near future

This is what should be done first.

*** TODO Get the autogeneration done

The autogeneration is the heart of maw, so we need to finish that first. It will
also be the most complicated part. Or, that might be an exaggeration...

**** TODO finish the unit package

***** TODO fix algorithms in unit_type

***** TODO write the rest of the unit files, trade, medic...

***** TODO make mocks of the generated files in the unit package
We should make mocks of the autogenerated files, so that we have something to
test against. And it's probably best to do them before we do the autogeneration
code, so that we know what we're working towards.

**** TODO finish the map package

***** TODO write imprv.h

***** TODO write resrc.h

***** TODO make mocks

**** TODO finish the plyr package

**** TODO finish the city package

**** TODO write the tech package

Technologies. Should be pretty simple, pretty much just an enum.

** Further on up the road

*** TODO documentation

It would be awesome to have a latex file or something that explains the game.
This should also have sections that are autogenerated from the conf files.

*** TODO maw::server::db

This will be the class that implements the data storage on the server. I suggest
that we make this an abstract class, so that we can have different backends.
This is mainly to make develpment easier.

**** TODO flat_file_db_driver

Not really a database driver, something simpler. Just store everything in flat
files, text or binary. Then linear search to get what we want, instead of fancy
sql querys. Actually, this might just be fast enough for our needs but it'll
still just be a temporary solution.

**** TODO sqlite_driver

A driver for sqlite. This should help with keeping a consistent state on the
server.

**** maybe a postgresql driver?

Just to try it, low on the list.

*** TODO cpnproto

This is the library we will use for serialization. We need to write definitions
and probably some wrappers. Should probably go in common.

*** TODO graphix

**** TODO draw some terrain
     
**** TODO draw a unit.
With the health bar and everything.

*** TODO maw::client::nw

The client side of the network connection. Just like the db driver I suggest we
do this in steps, and that we make it an abstract class, so that we can
implement differnet verions of the interface.

**** TODO fake_nw, or something like that

Not actually a network driver. This will have the entiry server code compiled
in, so that it can respond to the clients requests without having to do any
actual network stuff. Will not work for multiple clients, but it will be a start
for making sure simple stuff like movement and map discovery works.

**** TODO nw_localhost

localhost communication without authentication or anything. Clients identify as
a player. At this point the game should be pretty much functional. Here we will
need to define the protocol for the communications.

**** TODO localhost_auth

Localhost with authentication. 

**** TODO ssl

The full monty, with proper authentication and ssl

*** TODO maw::server::nw

This will obviously need to be developed in parallel with the client code.

*** TODO server stuff

**** TODO map reader, writer

**** TODO map generator

**** TODO user database

**** TODO The actual gameplay code

The fun stuff, how battles happen, trade, all that good jazz.

**** TODO send mail when it's your turn

** In the land of dreams...

*** map editor?

*** live updates for clients when it's not their turn





