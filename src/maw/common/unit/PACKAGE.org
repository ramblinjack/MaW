* Unit

This package defines the units of MaW. 

** Manually written

*** unit_glbl.h

*** unit_type.{h, cpp}

The definition and implementation of the base unit_type. This is the class that
will be extended by all unit types. It contains implementations for the methods
that are common to all units, like how their health points influence their
attack and defense strength. It also contains declarations of some virtual
methods which are meant to be overridden by the individual units. These define
the behaviours which are basically different for all types, like how many moves
it costs to move across terrain.

*** unit_ext.{h,cpp}

Contains declarations and implementaions of the functions which make up the
external interface to the unit package. Also contains the 

# Trading units are an innovative feature of maw. The idea is plentifold, but
# these units form the basis for the economic part of the game. The idea is that
# trade units connect two cities. That's how you make money in the game. Whenever
# a trade unit reaches one of the cities it connects, the player who owns it gets
# a sum of gold. You get more money for connecting to a foreign city. This is also
# a reason to build roads; the faster your trade units move, the more money you
# make.

# I think roads should cost money, so that we can avoid the road spamming that
# happened in civ II.

# Now, the other important thing trade units do is that they make up your trade
# network. The trade network is important because thats how resources are shared.
# Screw this, I'll explain later...


** Autogenerated

*** unit_glbl_gen.h

    
*** unit_glbl_gen.cpp


*** unit_int_gen.hpp


