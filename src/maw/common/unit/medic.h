#ifndef MEDIC_H
#define MEDIC_H
/*
 * Copyright (C) 2015, The MaW Team
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/*
  This file defines the medic unit. These are units which can heal other units.
  Those units which are medic units should extend this class. Basically I think
  these units should provide a "heling power" per turn. Then maybe that could be
  distributed among the units on the same tile, or maybe the player should be
  able to decide which unit to heal. Anyway, that should be up to the server to
  decide.

  There is a pretty sucky dependence here which is that all medic units should
  be of supertype MEDIC, or something to that effect, so ideally we should make
  sure the unit_type ctor gets called with supertype=MEDIC, but I don't see a
  way to do that, so we'll just have to make sure all autogenerated medic types
  get called with the correct supertype. Something to keep in mind.
 */

namespace maw {
namespace common {
namespace unit {

class medic {
private:
  // the base healing ability.
  const unsigned heal;

public:
  medic(const unsigned heal): heal(heal) {}

  // returns the healing power the unit this turn
  unsigned get_heal(const unit_t me) const;
};

} // end namespace unit
} // end namespace common
} // end namespace maw
#endif // ifndef MEDIC_H
